name: Fake News Classifier CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permet de déclencher le workflow manuellement

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        # Si vous avez des tests, décommentez la ligne suivante
        # pytest tests/ -v
        echo "Tests seraient exécutés ici"
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: fake-news-classifier:test
        
  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/fake-news-classifier:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/fake-news-classifier:${{ github.sha }}
          
    # Configuration pour déploiement sur un serveur (à activer si nécessaire)
    - name: Deploy to production server
      if: false  # Changer à true quand vous êtes prêt à déployer
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /chemin/vers/votre/application
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/fake-news-classifier:latest
          docker stop fake-news-app || true
          docker rm fake-news-app || true
          docker run -d --name fake-news-app -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/fake-news-classifier:latest
